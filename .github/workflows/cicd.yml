name:
  CI/CD Workflow

  # Workflow triggers
on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master

  # Environment Variables
env:
  PACKAGE_REGISTRY_TO_USE: nico8034
  DOCKER_IMAGE_NAME: lowercase-image-name
  PROJECT_NAME: ProjectName
  GROUP_NUMBER: GroupNumber #I.e  Group02

jobs:
  # Create artifact of repository source code to use for consistensy accross all jobs
  clone-repository:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.0.0
      - name: Upload Repository artifacts
        uses: actions/upload-artifact@v3
        with:
          name: repository-artifacts
          path: .
  setup-vpn:
    runs-on: ubuntu-latest
    steps:
      - name: Install OpenVPN
        run: sudo apt-get update && sudo apt-get install -y openvpn

      - name: Setup VPN
        run: |
          echo "${{ secrets.VPN_CONFIG }}" > config.ovpn
          sudo openvpn --config config.ovpn &
  ssh-connect:
    runs-on: ubuntu-latest
    steps:
      - name: Setup SSH Key and Connect
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > private_key.pem
          chmod 600 private_key.pem
          ssh-keyscan ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts
          ssh -o StrictHostKeyChecking=no -i private_key.pem ${{ env.SSH_USERNAME }}@${{ secrets.SERVER_IP }} "echo 'SSH connection successful'"

  # Job for deploying the application, could be the logic for deploying to your VM
  deploy-application:
    runs-on: ubuntu-latest
    needs: [clone-repository, ssh-connect]
    continue-on-error: true
    steps:
      - name: Logic for deploying application
        run: echo "deploy app"

      - name: Download repository artifact
        uses: actions/download-artifact@v3
        with:
          name: repository-artifacts
          path: .
